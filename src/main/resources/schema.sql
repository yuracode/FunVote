-- ========================================
-- 推しメンバー投票システム データベース定義
-- ========================================
-- 作成日: 2025-10-23
-- 説明: メンバーへの投票を記録し、集計するためのテーブル定義
-- ========================================

-- ========================================
-- メンバーマスタテーブル
-- ========================================
-- 目的: 投票対象となるメンバーの基本情報を管理
-- 用途: メンバー一覧の表示、投票画面での選択肢表示
-- ========================================
CREATE TABLE members (
    -- メンバーID（主キー）
    -- AUTO_INCREMENT: 新規登録時に自動で1,2,3...と連番が振られる
    -- PRIMARY KEY: このテーブルの主キー（各メンバーを一意に識別する）
    member_id INT AUTO_INCREMENT PRIMARY KEY,
    
    -- メンバー名
    -- VARCHAR(50): 最大50文字までの可変長文字列
    -- NOT NULL: 必須項目（NULLは許可しない）
    -- 用途: 投票画面や結果画面でメンバー名を表示
    member_name VARCHAR(50) NOT NULL,
    
    -- 画像ファイルのパス
    -- VARCHAR(255): 最大255文字までの可変長文字列
    -- NULL許可: 画像がない場合はNULLでも良い
    -- 例: '/images/member_a.jpg'
    -- 用途: メンバーのアイコンや写真を表示する際のファイルパス
    image_path VARCHAR(255),
    
    -- 表示順序
    -- INT: 整数型
    -- NOT NULL: 必須項目
    -- DEFAULT 0: 値を指定しない場合は0が設定される
    -- 用途: 投票画面でメンバーを表示する順番を制御
    --      （数字が小さい順に表示される）
    display_order INT NOT NULL DEFAULT 0,
    
    -- 登録日時
    -- TIMESTAMP: 日付と時刻を記録する型
    -- NOT NULL: 必須項目
    -- DEFAULT CURRENT_TIMESTAMP: レコード挿入時に自動的に現在日時が設定される
    -- 用途: メンバーがいつ登録されたか記録（管理用）
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- ========================================
-- 投票履歴テーブル
-- ========================================
-- 目的: ユーザーがいつ誰に投票したかを記録
-- 用途: 投票数の集計、投票履歴の確認
-- 特徴: 1票ごとに1レコード（投票するたびに行が追加される）
-- ========================================
CREATE TABLE votes (
    -- 投票ID（主キー）
    -- AUTO_INCREMENT: 投票されるたびに自動で1,2,3...と連番が振られる
    -- PRIMARY KEY: このテーブルの主キー（各投票を一意に識別する）
    -- 用途: 各投票レコードを識別する
    vote_id INT AUTO_INCREMENT PRIMARY KEY,
    
    -- 投票されたメンバーのID（外部キー）
    -- INT: membersテーブルのmember_idと同じ型
    -- NOT NULL: 必須項目（投票先が不明な投票は存在しない）
    -- 用途: 「誰に投票したか」を記録
    -- 例: member_id = 3 なら「メンバーC」に投票
    member_id INT NOT NULL,
    
    -- 投票日時
    -- TIMESTAMP: 日付と時刻を記録する型
    -- NOT NULL: 必須項目
    -- DEFAULT CURRENT_TIMESTAMP: 投票時に自動的に現在日時が設定される
    -- 用途: いつ投票されたかを記録（時系列分析や不正検出に使用）
    voted_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    
    -- 投票者のIPアドレス
    -- VARCHAR(45): 最大45文字（IPv6に対応するため45文字）
    --              IPv4の例: 192.168.1.1 (最大15文字)
    --              IPv6の例: 2001:0db8:1234:5678:90ab:cdef:0000:0000 (最大45文字)
    -- NULL許可: IPアドレスを取得できない場合はNULLでも良い
    -- 用途: 同一ユーザーの連続投票を制限する場合に使用（将来的な拡張用）
    ip_address VARCHAR(45),
    
    -- 外部キー制約
    -- 目的: データの整合性を保証する
    -- 説明: member_idは必ずmembersテーブルに存在するmember_idでなければならない
    -- 効果: 存在しないメンバーへの投票を防ぐ
    --      （例: member_id = 999 のような存在しないメンバーへの投票は拒否される）
    -- 動作: membersテーブルのメンバーを削除しようとした時、
    --      そのメンバーへの投票がvotesテーブルに存在する場合は削除が拒否される
    FOREIGN KEY (member_id) REFERENCES members(member_id)
);

-- ========================================
-- テーブル設計の補足説明
-- ========================================
-- 
-- 【membersテーブルとvotesテーブルの関係】
-- ・1対多（One to Many）の関係
-- ・1人のメンバーは複数の投票を受けることができる
-- ・1つの投票は1人のメンバーに対してのみ行われる
--
-- 【投票数の集計方法】
-- ・votesテーブルのレコード数を数えることで投票数を集計
-- ・例: member_id = 1 の投票数
--   SELECT COUNT(*) FROM votes WHERE member_id = 1;
--
-- 【投票のリセット方法】
-- ・全投票削除: DELETE FROM votes;
-- ・特定メンバーの投票削除: DELETE FROM votes WHERE member_id = 1;
--
-- 【データ例】
-- membersテーブル:
-- +----------+-------------+-------------------------+--------------+---------------------+
-- | member_id| member_name | image_path              | display_order| created_at          |
-- +----------+-------------+-------------------------+--------------+---------------------+
-- | 1        | メンバーA   | /images/member_a.jpg    | 1            | 2025-10-23 10:00:00 |
-- | 2        | メンバーB   | /images/member_b.jpg    | 2            | 2025-10-23 10:00:01 |
-- +----------+-------------+-------------------------+--------------+---------------------+
--
-- votesテーブル:
-- +---------+-----------+---------------------+----------------+
-- | vote_id | member_id | voted_at            | ip_address     |
-- +---------+-----------+---------------------+----------------+
-- | 1       | 1         | 2025-10-23 10:30:00 | 192.168.1.100  |
-- | 2       | 1         | 2025-10-23 10:31:00 | 192.168.1.101  |
-- | 3       | 2         | 2025-10-23 10:32:00 | 192.168.1.102  |
-- +---------+-----------+---------------------+----------------+
-- 上記の例では: メンバーA(id=1)が2票、メンバーB(id=2)が1票
--
-- ========================================